apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Chart.Name }}
  namespace: kube-system
  annotations:
    scheduler.alpha.kubernetes.io/critical-pod: ""
  labels:
    hel.sh/chart: "{{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}"
    component: scheduler
    tier: control-plane
    app: {{ .Chart.Name }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: {{ .Chart.Name }}
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      labels:
        component: scheduler
        tier: control-plane
        app: {{ .Chart.Name }}
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                - key: kubernetes.io/role
                  operator: In
                  values:
                    - master
              - matchExpressions:
                - key: node-role.kubernetes.io/master
                  operator: In
                  values:
                    - ""
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchExpressions:
                  - key: app
                    operator: In
                    values:
                      - {{ .Chart.Name }}
              topologyKey: "kubernetes.io/hostname"
      containers:
      - name: {{ .Chart.Name }}
        image: "{{ .Values.image.repository }}:{{ .Chart.AppVersion }}"
        command:
          - /usr/local/bin/ai-scheduler
          - --config=/etc/kubernetes/kubeschedulerconfig.yaml
          - --secure-port={{ .Values.securePort }}
          - --v=4
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        livenessProbe:
          httpGet:
            host: 127.0.0.1
            port: {{ .Values.healthzPort }}
            scheme: HTTP
            path: /healthz
          initialDelaySeconds: 15
        readinessProbe:
          httpGet:
            host: 127.0.0.1
            port: {{ .Values.healthzPort }}
            scheme: HTTP
            path: /healthz
        resources:
{{ toYaml .Values.resources | indent 10 }}
        securityContext:
          privileged: false
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
          - name: scheduler-config-volume
            mountPath: /etc/kubernetes/
      volumes:
        - name: scheduler-config-volume
          configMap:
            name: {{ .Chart.Name }}-config
      dnsPolicy: ClusterFirst
      hostNetwork: true
      tolerations:
        - key: "node-role.kubernetes.io/master"
          operator: "Equal"
          value: ""
          effect: "NoSchedule"
      priorityClassName: system-cluster-critical
      restartPolicy: {{ .Values.restartPolicy }}
      schedulerName: default-scheduler
      securityContext: {}
      serviceAccountName: {{ .Chart.Name }}
      terminationGracePeriodSeconds: 30
