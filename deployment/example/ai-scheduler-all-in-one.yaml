apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  name: pools.resource.aibee.cn
spec:
  group: resource.aibee.cn
  versions:
    - name: v1alpha1
      served: true
      storage: true
  names:
    kind: Pool
    plural: pools
    singular: pool
    shortNames:
      - pool
  scope: Cluster
  validation:
    openAPIV3Schema:
      properties:
        apiVersion:
          type: string
        kind:
          type: string
        metadata:
          type: object
        spec:
          properties:
            weight.value:
              format: int32
              type: integer
            disablePreemption:
              format: bool
              type: boolean
            disableBorrowing:
              format: bool
              type: boolean
            disableSharing:
              format: bool
              type: boolean
          type: object
      type: object
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: ai-scheduler-config
  namespace: kube-system
data:
  kubeschedulerconfig.yaml: |
    apiVersion: kubescheduler.config.k8s.io/v1alpha1
    kind: KubeSchedulerConfiguration
    leaderElection:
      leaderElect: true
      leaseDuration: "15s"
      renewDeadline: "10s"
      retryPeriod: "2s"
      lockObjectNamespace: kube-system
      lockObjectName: ai-scheduler
    schedulerName: ai-scheduler
    healthzBindAddress: 0.0.0.0:20999
    metricsBindAddress: 0.0.0.0:20999
    disablePreemption: true
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    rbac.authorization.kubernetes.io/autoupdate: "true"
  name: system:ai-scheduler
rules:
  - apiGroups:
      - ""
    resources:
      - events
    verbs:
      - create
      - patch
      - update
  - apiGroups:
      - ""
    resources:
      - endpoints
    verbs:
      - create
  - apiGroups:
      - ""
    resourceNames:
      - ai-scheduler
    resources:
      - endpoints
    verbs:
      - delete
      - get
      - patch
      - update
  - apiGroups:
      - ""
    resources:
      - nodes
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - ""
    resources:
      - pods
    verbs:
      - delete
      - get
      - list
      - watch
  - apiGroups:
      - ""
    resources:
      - bindings
      - pods/binding
    verbs:
      - create
  - apiGroups:
      - ""
    resources:
      - pods/status
    verbs:
      - patch
      - update
  - apiGroups:
      - ""
    resources:
      - replicationcontrollers
      - services
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - apps
      - extensions
    resources:
      - replicasets
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - apps
    resources:
      - statefulsets
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - policy
    resources:
      - poddisruptionbudgets
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - ""
    resources:
      - persistentvolumeclaims
      - persistentvolumes
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - authentication.k8s.io
    resources:
      - tokenreviews
    verbs:
      - create
  - apiGroups:
      - authorization.k8s.io
    resources:
      - subjectaccessreviews
    verbs:
      - create
  - apiGroups:
      - storage.k8s.io
    resources:
      - storageclasses
    verbs:
      - list
      - get
      - watch
  - apiGroups:
      - resource.aibee.cn
    resources:
      - pools
    verbs:
      - create
      - delete
      - update
      - patch
      - list
      - get
      - watch
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: ai-scheduler
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: ai-scheduler-as-kube-scheduler
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: system:ai-scheduler
subjects:
  - kind: ServiceAccount
    name: ai-scheduler
    namespace: kube-system
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ai-scheduler
  namespace: kube-system
  annotations:
    scheduler.alpha.kubernetes.io/critical-pod: ""
  labels:
    component: scheduler
    tier: control-plane
    app: ai-scheduler
spec:
  replicas: 3
  selector:
    matchLabels:
      app: ai-scheduler
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      labels:
        component: scheduler
        tier: control-plane
        app: ai-scheduler
    spec:
      containers:
        - name: ai-scheduler
          image: registry.aibee.cn/platform/kubernetes/ai-scheduler:v0.1.0-alpha0
          command:
            - /usr/local/bin/ai-scheduler
            - --config=/etc/kubernetes/kubeschedulerconfig.yaml
            - --secure-port=20888
            - --v=4
          imagePullPolicy: IfNotPresent
          livenessProbe:
            httpGet:
              host: 127.0.0.1
              port: 20999
              scheme: HTTP
              path: /healthz
            initialDelaySeconds: 15
          readinessProbe:
            httpGet:
              host: 127.0.0.1
              port: 20999
              scheme: HTTP
              path: /healthz
          resources:
            limits:
              cpu: 2000m
              memory: 2048Mi
            requests:
              cpu: 2000m
              memory: 2048Mi
          securityContext:
            privileged: false
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
            - name: scheduler-config-volume
              mountPath: /etc/kubernetes/
      volumes:
        - name: scheduler-config-volume
          configMap:
            name: ai-scheduler-config
      dnsPolicy: ClusterFirst
      hostNetwork: true
      nodeSelector:
        kubernetes.io/role: master
      priorityClassName: system-cluster-critical
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      serviceAccountName: ai-scheduler
      terminationGracePeriodSeconds: 30
